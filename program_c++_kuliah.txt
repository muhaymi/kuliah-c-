program_c++_kuliah
-untuk membuat tugas kuliah berupa program c++

program find word menggunakan bahasa c++ dalam bentuk matriks

#include <iostream> //untuk input-output
#include <string.h> //untuk str function
#include <algorithm> //untuk reverse function

using namespace std;

string RandomMatriks(char _input[]);

int main(){
    string tebak;
    int byk;
    
    cin >> byk;
	cin.ignore();
	
    string hasil[byk];
    
    for(int i = 0; i < byk; i++){    
	    getline(cin, tebak);
	    
	    char input[strlen(tebak.c_str())];
	    
	    strcpy(input, tebak.c_str());
   		
   		hasil[i] = RandomMatriks(input);
	}
      
	  
	for(int i = 0; i < byk; i++){
		cout << hasil[i] << endl;
	}
}

string RandomMatriks(char _input[]){
    int u = 0;
    char *cek;
    char temp[15];
    char randomReverse[15][15];
    char randomMatriks[15][15] = {
        {'a', 'a', 'u', 'n', 't', 't', 'm', 'm', 'h', 'f', 'o', 'o', 'd', 'n', 'b'},
        {'j', 'l', 'w', 'c', 'q', 'l', 'd', 'z', 'm', 'p', 'm', 'v', 'd', 'm', 'r'},
        {'a', 's', 'a', 'q', 'm', 'q', 'u', 'w', 'v', 'v', 'b', 's', 'o', 'h', 'i'},
        {'b', 'w', 'p', 'l', 'o', 't', 'a', 'n', 'a', 'd', 't', 'p', 'g', 'n', 'c'},
        {'r', 'e', 'w', 'n', 'g', 'o', 'd', 'j', 'c', 'p', 'n', 'a', 't', 'n', 'k'},
        {'e', 'e', 'o', 't', 'w', 'o', 's', 'b', 'q', 'h', 'a', 'r', 'r', 's', 'a'},
        {'a', 'z', 'c', 'g', 'e', 's', 'w', 'e', 'w', 'n', 'a', 'k', 'n', 'p', 'b'},
        {'d', 'i', 'n', 'n', 'e', 'r', 'q', 'o', 'd', 'l', 'w', 'd', 'c', 'a', 'r'},
        {'o', 'n', 'o', 'p', 'k', 'w', 'm', 'p', 'a', 'r', 'k', 't', 'z', 'c', 'c'},
        {'q', 'b', 'f', 'r', 'o', 'g', 'm', 'a', 'm', 'w', 'p', 'w', 'e', 'e', 'y'},
        {'l', 'q', 'z', 'q', 'n', 'n', 'm', 'r', 'z', 'j', 'j', 's', 'c', 'l', 'g'},
        {'m', 'o', 's', 'g', 'z', 'c', 'z', 'e', 't', 'd', 'b', 'o', 'o', 't', 'o'},
        {'p', 'd', 'c', 'r', 'z', 'm', 's', 'n', 'g', 'r', 'd', 'n', 'e', 'p', 'z'},
        {'o', 'h', 'n', 'k', 'z', 'w', 'a', 't', 'e', 'r', 'j', 'g', 't', 'r', 'a'},
        };
  	
    for (int i = 0; i < 15; i++) // Horizontal
    {
      for (int j = 0; j < 15; j++)
      {
        temp[j] = randomMatriks[i][j];
      }
      cek = strstr(temp, _input);
      if(cek != NULL){
        return "Ada";
      }
    }

    int x = strlen(temp);
    for (int i = 0; i < 15; i++) // Horizontal Reverse
    {
      for (int j = x-1; j >= 0; j--)
      {
        temp[j] = randomMatriks[i][j];
      }
	  
	  reverse(temp, temp + x);
      cek = strstr(temp, _input);
      
      if(cek != NULL){
        return "Ada";
      }
    }
  
    for (int i = 0; i < 15; i++) //Reverse Multidimensional matrix
    {
        int k = 14;
        for (int j = 0; j < 15; j++)
        {
            randomReverse[i][j] = randomMatriks[i][k];  
            k--;   
        }        
    }
        
    for(int i = 0; i <= 14; i++) { //Vertical
		for (int j = 0; j <= 14; j++) {
			temp[j] = randomMatriks[j][i];
		}
		cek = strstr(temp, _input);
		if(cek != NULL) {
			return "Ada";
		}
	}
		
	int JumlahHuruf = strlen(temp);
	for (int i = 14; i >= 0; i--) { //Vertical Reverse
		for (int j = 14; j >= 0; j--) {
			temp[j] = randomMatriks[j][i];
		}   
		reverse(temp, temp+JumlahHuruf);
		cek = strstr(temp, _input);
		if(cek != NULL){
			return "Ada";
		}
	}
  
    for (int i = 0; i < 15; i++) //Diagonal sebagian kiri-tengah ke atas-kanan
    {
        for (int j = 0; j < 15 - u; j++)
        {
            temp[j] = randomMatriks[j][j + u];
        }   

        u++;
        cek = strstr(temp, _input);
        if(cek != NULL){
            return "Ada";
        }
    }

    u = 14;

    for (int i = 0; i < 14; i++) //Diagonal sebagian kiri-bawah ke atas-tengah
    {
        for (int j = 14; j >= 0 + u; j--)
        {
            temp[j - u] = randomMatriks[j][j - u];
        }   
        
        u--;
        reverse(temp, &temp[strlen(temp)]);
        cek = strstr(temp, _input);
        if(cek != NULL){
            return "Ada";
        }
    }

    for (int i = 0; i < 15; i++) //Diagonal sebagian kanan-tengah ke atas-kanan
    {
        for (int j = 0; j < 15 - u; j++)
        {
            temp[j] = randomReverse[j][j + u];
        }   

        u++;
        cek = strstr(temp, _input);
        if(cek != NULL){
            return "Ada";
        }
    }

    u = 14;

    for (int i = 0; i < 14; i++) //Diagonal sebagian kanan-bawah ke atas-tengah
    {
        for (int j = 14; j >= 0 + u; j--)
        {
            temp[j - u] = randomReverse[j][j - u];
        }
        
        u--;
        
        reverse(temp, &temp[strlen(temp)]);
        cek = strstr(temp, _input);
        if(cek != NULL){
            return "Ada";
        }
    }

    return "Tidak Ada";
}
